name: Salesforce CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Salesforce CLI
        run: npm install --global sfdx-cli

      - name: Authenticate to Salesforce (JWT)
        run: |
          echo "${{ secrets.SF_JWT_KEY }}" > server.key
          sfdx force:auth:jwt:grant \
            --clientid ${{ secrets.SF_CONSUMER_KEY }} \
            --jwtkeyfile server.key \
            --username ${{ secrets.SF_USERNAME }} \
            --instanceurl ${{ secrets.SF_LOGIN_URL }} \
            --setalias deployOrg

      - name: Install jq for JSON parsing
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Deploy Metadata and Capture Output
        run: |
          echo "Starting deployment..."

          DEPLOY_RESULT=$(sfdx force:source:deploy \
            --sourcepath force-app \
            --targetusername deployOrg \
            --testlevel RunLocalTests \
            --json) || true

          echo "$DEPLOY_RESULT" > deploy-result.json

          DEPLOY_ID=$(jq -r '.result.id // "N/A"' deploy-result.json)
          ERROR_MSG=$(jq -r '.message // empty' deploy-result.json)
          COMPONENT_ERRORS=$(jq -r '.result.details.componentFailures[]? | "\(.componentType) \(.fullName): \(.problem)"' deploy-result.json)
          TEST_ERRORS=$(jq -r '.result.details.runTestResult.failures[]? | "\(.name).\(.methodName): \(.message)"' deploy-result.json)

          echo "Deployment ID: $DEPLOY_ID"
          echo "---------------------------"

          if [[ -n "$ERROR_MSG" ]]; then
            echo "Error Message: $ERROR_MSG"
          fi

          if [[ -n "$COMPONENT_ERRORS" ]]; then
            echo "Component Errors:"
            echo "$COMPONENT_ERRORS"
          fi

          if [[ -n "$TEST_ERRORS" ]]; then
            echo "Test Failures:"
            echo "$TEST_ERRORS"
          fi

          echo "---------------------------"

          echo "DEPLOY_ID=$DEPLOY_ID" >> $GITHUB_ENV

          if [[ "$DEPLOY_ID" == "N/A" || -n "$ERROR_MSG" || -n "$COMPONENT_ERRORS" || -n "$TEST_ERRORS" ]]; then
            echo "Deployment failed."
            exit 1
          else
            echo "Deployment succeeded."
          fi
